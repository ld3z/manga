---
import type { Comic, Genre } from '../lib/types';
import { Image } from 'astro:assets';
import { getGenreNames } from '../lib/api';

interface Props {
  comic: Comic;
  genres: Genre[];
}

const { comic, genres } = Astro.props;
const genreNames = getGenreNames(comic.md_comics.genres, genres);
const isAvif = comic.md_comics.md_covers[0]?.b2key.endsWith('.avif');
const coverUrl = comic.md_comics.md_covers[0]
  ? `https://meo.comick.pictures/${comic.md_comics.md_covers[0].b2key}`
  : '/placeholder.png';
---

<div class="group bg-secondary rounded-xl overflow-hidden shadow-md transition-all duration-300 hover:-translate-y-1 hover:shadow-lg h-full flex flex-col max-w-[250px] mx-auto">
  <a href={`https://comick.io/comic/${comic.md_comics.slug}`} target="_blank" rel="noopener noreferrer" class="flex flex-col h-full">
    {!isAvif ? (
      <Image 
        src={coverUrl} 
        alt={comic.md_comics.title} 
        inferSize={true}
        class="w-full h-[375px] object-cover transition-transform duration-300 group-hover:scale-105"
      />
    ) : (
      <img
        src={coverUrl}
        alt={comic.md_comics.title}
        width="250"
        height="375"
        class="w-full h-[375px] object-cover transition-transform duration-300 group-hover:scale-105"
      />
    )}
    <div class="p-4 md:p-5 flex-grow flex flex-col bg-secondary">
      <h3 class="text-lg font-semibold mb-2 line-clamp-2">{comic.md_comics.title}</h3>
      <p class="text-accent font-medium">Chapter {comic.chap}</p>
      {genreNames.length > 0 && (
        <div class="flex flex-wrap gap-2 my-3" aria-label="Comic genres">
          {genreNames.map(genre => (
            <span class="bg-accent/10 text-accent px-3 py-1 rounded-full text-xs font-medium truncate max-w-[150px] md:max-w-[120px] transition-all hover:bg-accent/15 hover:-translate-y-0.5" title={genre}>
              {genre}
            </span>
          ))}
        </div>
      )}
      <p class="mt-auto text-sm text-primary/60">
        {new Date(comic.updated_at).toLocaleString(undefined, { timeStyle: "short" })}
      </p>
    </div>
  </a>
</div>